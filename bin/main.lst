   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.setupLED,"ax",@progbits
  12               	.global	setupLED
  14               	setupLED:
  15               	.LFB5:
  16               		.file 1 "src/main.c"
   1:src/main.c    **** #include <stdlib.h>
   2:src/main.c    **** #include <avr/interrupt.h>
   3:src/main.c    **** #include <avr/io.h>
   4:src/main.c    **** 
   5:src/main.c    **** #define CPU_PRESCALE(n) (CLKPR = 0x80, CLKPR = (n))
   6:src/main.c    **** 
   7:src/main.c    **** int core(void);
   8:src/main.c    **** void setupLED(void);
   9:src/main.c    **** void setupSwitch(void);
  10:src/main.c    **** void setLED(int state);
  11:src/main.c    **** 
  12:src/main.c    **** volatile int flag = 0;
  13:src/main.c    **** 
  14:src/main.c    **** #ifdef __AVR__
  15:src/main.c    **** int main(void)
  16:src/main.c    **** {
  17:src/main.c    ****   core();
  18:src/main.c    **** }
  19:src/main.c    **** #endif
  20:src/main.c    **** 
  21:src/main.c    **** void setupLED()
  22:src/main.c    **** {
  17               		.loc 1 22 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23:src/main.c    ****   // Configure Port F, Pin 0 to Output
  24:src/main.c    ****   DDRF |= (1 << 0);
  23               		.loc 1 24 0
  24 0000 809A      		sbi 0x10,0
  25:src/main.c    ****   // Set Port F, Pin 0 to HIGH
  26:src/main.c    ****   PORTF |= (1 << 0);
  25               		.loc 1 26 0
  26 0002 889A      		sbi 0x11,0
  27 0004 0895      		ret
  28               		.cfi_endproc
  29               	.LFE5:
  31               		.section	.text.setupSwitch,"ax",@progbits
  32               	.global	setupSwitch
  34               	setupSwitch:
  35               	.LFB6:
  27:src/main.c    **** }
  28:src/main.c    **** 
  29:src/main.c    **** void setupSwitch()
  30:src/main.c    **** {
  36               		.loc 1 30 0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  31:src/main.c    ****   // Configure Port D, Pin 2 to Input
  32:src/main.c    ****   DDRD &= ~(1 << 2);
  42               		.loc 1 32 0
  43 0000 5298      		cbi 0xa,2
  33:src/main.c    ****   // Set Port D, Pin 2 to use a Pull-up resistor
  34:src/main.c    ****   PORTD |= (1 << 2);
  44               		.loc 1 34 0
  45 0002 5A9A      		sbi 0xb,2
  46 0004 0895      		ret
  47               		.cfi_endproc
  48               	.LFE6:
  50               		.section	.text.setLED,"ax",@progbits
  51               	.global	setLED
  53               	setLED:
  54               	.LFB7:
  35:src/main.c    **** 
  36:src/main.c    ****   // TODO: Clear interrupt enable
  37:src/main.c    **** 
  38:src/main.c    ****   // TODO: Set interrupt sense type to trigger on any logic change
  39:src/main.c    **** 
  40:src/main.c    ****   // TODO: enable interrupt
  41:src/main.c    **** 
  42:src/main.c    **** }
  43:src/main.c    **** 
  44:src/main.c    **** void setLED(int state)
  45:src/main.c    **** {
  55               		.loc 1 45 0
  56               		.cfi_startproc
  57               	.LVL0:
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62 0000 0895      		ret
  63               		.cfi_endproc
  64               	.LFE7:
  66               		.section	.text.core,"ax",@progbits
  67               	.global	core
  69               	core:
  70               	.LFB8:
  46:src/main.c    ****   // state 1 means "ON"
  47:src/main.c    ****   // state 0 means "OFF"
  48:src/main.c    ****   if (state == 1)
  49:src/main.c    ****   {
  50:src/main.c    ****     // TODO: set F0 to HIGH
  51:src/main.c    ****   }
  52:src/main.c    ****   else
  53:src/main.c    ****   {
  54:src/main.c    ****     // TODO: set F0 to LOW
  55:src/main.c    ****   }
  56:src/main.c    **** }
  57:src/main.c    **** 
  58:src/main.c    **** int core(void)
  59:src/main.c    **** {
  71               		.loc 1 59 0
  72               		.cfi_startproc
  73               	/* prologue: function */
  74               	/* frame size = 0 */
  75               	/* stack size = 0 */
  76               	.L__stack_usage = 0
  60:src/main.c    ****   CPU_PRESCALE(0x01);
  77               		.loc 1 60 0
  78 0000 80E8      		ldi r24,lo8(-128)
  79 0002 8093 6100 		sts 97,r24
  80 0006 81E0      		ldi r24,lo8(1)
  81 0008 8093 6100 		sts 97,r24
  61:src/main.c    ****   setupLED();
  82               		.loc 1 61 0
  83 000c 0E94 0000 		call setupLED
  84               	.LVL1:
  62:src/main.c    ****   setupSwitch();
  85               		.loc 1 62 0
  86 0010 0E94 0000 		call setupSwitch
  87               	.LVL2:
  88               	.L5:
  63:src/main.c    ****   // TODO: enable global interrupts
  64:src/main.c    **** 
  65:src/main.c    ****   // TODO: create a state variable
  66:src/main.c    **** 
  67:src/main.c    ****   while (1)
  68:src/main.c    ****   {
  69:src/main.c    ****     // Do regular processing (nothing in this lesson)
  70:src/main.c    **** 
  71:src/main.c    ****     if (flag == 1)
  89               		.loc 1 71 0
  90 0014 8091 0000 		lds r24,flag
  91 0018 9091 0000 		lds r25,flag+1
  92 001c 00C0      		rjmp .L5
  93               		.cfi_endproc
  94               	.LFE8:
  96               		.section	.text.startup.main,"ax",@progbits
  97               	.global	main
  99               	main:
 100               	.LFB4:
  16:src/main.c    **** {
 101               		.loc 1 16 0
 102               		.cfi_startproc
 103               	/* prologue: function */
 104               	/* frame size = 0 */
 105               	/* stack size = 0 */
 106               	.L__stack_usage = 0
  17:src/main.c    ****   core();
 107               		.loc 1 17 0
 108 0000 0E94 0000 		call core
 109               	.LVL3:
 110               		.cfi_endproc
 111               	.LFE4:
 113               	.global	flag
 114               		.section .bss
 117               	flag:
 118 0000 0000      		.zero	2
 119               		.text
 120               	.Letext0:
 121               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:2      *ABS*:0000003e __SP_H__
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:3      *ABS*:0000003d __SP_L__
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:4      *ABS*:0000003f __SREG__
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:5      *ABS*:0000003b __RAMPZ__
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:7      *ABS*:00000001 __zero_reg__
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:14     .text.setupLED:00000000 setupLED
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:34     .text.setupSwitch:00000000 setupSwitch
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:53     .text.setLED:00000000 setLED
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:69     .text.core:00000000 core
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:117    .bss:00000000 flag
/var/folders/g0/nxlvnzhd5ms9ywmz7z4b5pnm0000gn/T//ccgIJyxh.s:99     .text.startup.main:00000000 main

UNDEFINED SYMBOLS
__do_clear_bss
